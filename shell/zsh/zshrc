# history
export HISTFILE="$XDG_STATE_HOME/zsh/history"
export HISTSIZE=100000  # メモリに保存される履歴の件数
export SAVEHIST=1000000 # 履歴ファイルに保存される履歴の件数

autoload -Uz compinit && compinit
autoload -Uz colors && colors

# Homebrew
case $(uname -sm) in
  'Darwin arm64' ) eval "$(/opt/homebrew/bin/brew shellenv)" ;;
  'Darwin x86_64' ) eval "$(/usr/local/bin/brew shellenv)" ;;
  * ) echo "You need to setup Homebrew manually (Unsupported: $(uname -om))" ;;
esac
fpath=("$HOMEBREW_PREFIX/share/zsh/site-functions" $fpath)

# llvm
path=("$HOMEBREW_PREFIX/opt/llvm/bin" $path)
export LDFLAGS="-L$HOMEBREW_PREFIX/opt/llvm/lib"
export CPPFLAGS="-I$HOMEBREW_PREFIX/opt/llvm/include"

# Rust
path=("$CARGO_HOME/bin"(N-/) $path[@])

# fzf
export FZF_CTRL_R_OPTS=--reverse
[ -f "$XDG_CACHE_HOME/fzf/setup.zsh" ] && source "$XDG_CACHE_HOME/fzf/setup.zsh"
fzf-zsh-setup-init() {
  mkdir -p "$XDG_CACHE_HOME/fzf/"
  fzf --zsh > "$XDG_CACHE_HOME/fzf/setup.zsh"
  zcompile "$XDG_CACHE_HOME/fzf/setup.zsh"
}

# mocward
export MOCWORD_DATA="$XDG_CACHE_HOME/mocword/mocword.sqlite"
mocword-data-install() {
  local url="https://github.com/high-moctane/mocword-data/releases/download/eng20200217/mocword.sqlite.gz"
  local zip="$MOCWORD_DATA.gz"
  mkdir -p "$(dirname $MOCWORD_DATA)"
  curl -L -o "$zip" "$url"
  if type gunzip > /dev/null 2>&1; then
    gunzip -f "$zip"
  else
    echo "You need to install 'gunzip' to extract the data file."
    rm -f "$zip"
    return 1
  fi
}

# nix fpath
for profile in ${(z)NIX_PROFILES}; do
  fpath=($profile/share/zsh/site-functions $profile/share/zsh/$ZSH_VERSION/functions $profile/share/zsh/vendor-completions $fpath)
done

# My Configs
source "$XDG_CONFIG_HOME/zsh/alias.zsh"
source "$XDG_CONFIG_HOME/zsh/completion.zsh"
source "$XDG_CONFIG_HOME/zsh/option.zsh"
source "$XDG_CONFIG_HOME/zsh/prompt.zsh"

# Command ine editor
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey '^xe' edit-command-line

if type direnv > /dev/null 2>&1; then
  eval "$(direnv hook zsh)"
fi

typeset -Ux path fpath manpath

# ローカルの設定ファイルがあれば読み込む
local local_config_file="$HOME/.zshrc.local"
if [ -f "$local_config_file" ]; then
  source "$local_config_file"
fi

# overrid source command
# function source {
#   ensure_zcompiled $1
#   builtin source $1
# }
# function ensure_zcompiled {
#   if [[ $# -ne 1 ]]; then
#     echo "Usage: ensure_zcompiled <target>"
#     return 1
#   fi
#   local target="$1"
#   local compiled="$target.zwc"
#   if [[ -L "$target" ]]; then
#     target=$(readlink -f "$1")
#   fi
#   if [[ ! -r "$compiled" || "$target" -nt "$compiled" ]]; then
#     echo "\033[1;36mCompiling\033[m $1"
#     zcompile $1
#   fi
# }
# ensure_zcompiled ~/.zshrc
# ensure_zcompiled ~/.zshenv
# ensure_zcompiled ~/.zprofile
#
# sheldon source
# () {
#   type sheldon > /dev/null 2>&1 || return
#   local sheldon_cache="$XDG_CACHE_HOME/zsh/sheldon.zsh"
#   local sheldon_toml="$HOME/dotfiles/zsh/plugins.toml"
#   if [[ ! -r "$sheldon_cache" || "$sheldon_toml" -nt "$sheldon_cache" ]]; then
#       mkdir -p "$(dirname "$sheldon_cache")"
#       sheldon source > "$sheldon_cache"
#   fi
#   source "$sheldon_cache"
# }
#
# un-overrid source command
# zsh-defer unfunction source
