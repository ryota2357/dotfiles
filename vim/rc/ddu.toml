[[plugins]]
repo = 'Shougo/ddu.vim'
depends = 'denops.vim'
on_event = 'CursorHold'
hook_add = '''
  nnoremap <Leader>f <Cmd>call ddu#start({
    \   'sources': [{'name': 'file_rec'}],
    \   'uiParams': { 'ff': { 'startFilter': v:true } }
    \ })<CR>

  nnoremap <Leader>g <Cmd>call ddu#start({
    \   'sources': [{'name': 'rg'}],
    \   'volatile': v:true,
    \   'uiParams': {
    \     'ff': {
    \       'startFilter': v:true,
    \       'autoAction': { 'name': 'preview' },
    \       'winRow': round(&lines * 0.05),
    \       'winCol': round(&columns * 0.05),
    \       'winHeight': round(&lines * 0.8),
    \       'winWidth': round(&columns * 0.45),
    \       'previewVertical': v:true,
    \       'previewCol': round(&columns * 0.51),
    \       'previewHeight': round(&lines * 0.81),
    \       'previewWidth': round(&columns * 0.45),
    \     }
    \   }
    \ })<CR>

  nnoremap <Leader>o <Cmd>call ddu#start({
    \   'name': 'filer',
    \   'ui': 'filer',
    \   'resume': v:true,
    \   'sources': [{'name': 'file'}]
    \ })<CR>

  command! Library call ddu#start({
    \   'sources': [{'name': 'cpl'}],
    \   'uiParams': { 'ff': { 'startFilter': v:true } }
    \ })
'''
hook_source = '''
  call ddu#custom#patch_global({
    \   'ui': 'ff',
    \   'uiOptions': {
    \     'filer': { 'toggle': v:true }
    \    },
    \   'uiParams': {
    \     'ff': {
    \       'split': 'floating',
    \       'floatingBorder': 'rounded',
    \       'previewFloating': v:true,
    \       'previewFloatingBorder': 'rounded'
    \     },
    \     'filer': {
    \       'split': 'vertical',
    \       'splitDirection': 'topleft',
    \       'winWidth': 30
    \     }
    \   },
    \   'sourceOptions': {
    \     'file_rec': {
    \       'ignoreCase': v:true,
    \       'matchers': ['matcher_fzf']
    \     },
    \     'rg': {
    \       'ignoreCase': v:true,
    \       'matchers': []
    \     },
    \     'cpl': {
    \       'ignoreCase': v:true,
    \       'matchers': ['matcher_fzf']
    \     },
    \     'file': { 'columns': ['icon_filename'] }
    \   },
    \   'sourceParams': {
    \     'file_rec': {
    \       'ignoredDirectories': ['.git', 'node_modules', '.cache']
    \     },
    \     'rg': {
    \       'args': ['--json', '--ignore-case']
    \     }
    \   },
    \   'columnParams': {
    \     'icon_filename': {
    \       'defaultIcon': { 'icon': 'ï€–' }
    \     }
    \   },
    \   'filterParams': {
    \     'matcher_fzf': { 'highlightMatched': 'Search' }
    \   },
    \   'kindOptions': {
    \     'file': { 'defaultAction': 'open' },
    \     'ui_select': { 'defaultAction': 'select' },
    \     'cpl': { 'defaultAction': 'paste' }
    \   },
    \   'actionOptions': {
    \     'narrow': {
    \       'quit': v:false,
    \     },
    \   }
    \ })

  autocmd VimResized * call s:UI_FF_Size()
  function! s:UI_FF_Size() abort
    call ddu#custom#patch_global('uiParams', {
      \   'ff': {
      \     'winRow': round(&lines * 0.2),
      \     'winCol': round(&columns * 0.15),
      \     'winHeight': round(&lines * 0.5),
      \     'winWidth': round(&columns * 0.7),
      \     'previewHeight': round(&lines * 0.15),
      \     'previewWidth': round(&columns * 0.7)
      \   }
      \ })
  endfunction
  call s:UI_FF_Size()
'''

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-ff = '''
  nnoremap <buffer> <CR>  <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
  nnoremap <buffer> <ESC> <Cmd>call ddu#ui#ff#do_action('quit')<CR>
'''
ddu-ff-filter = '''
  inoremap <buffer> <CR>  <Cmd>call ddu#ui#ff#do_action('itemAction', { 'params': {'command': 'drop'} })<CR>
  inoremap <buffer> <C-o> <Cmd>call ddu#ui#ff#do_action('itemAction', { 'params': {'command': 'tab drop'} })<CR>
  inoremap <buffer> <C-n> <Cmd>call ddu#ui#ff#execute("call cursor(line('.')+1,0)")<CR>
  inoremap <buffer> <C-p> <Cmd>call ddu#ui#ff#execute("call cursor(line('.')-1,0)")<CR>
  inoremap <buffer> <C-q> <Cmd>call ddu#ui#ff#do_action('preview')<CR>
  inoremap <buffer> <ESC> <Cmd>call ddu#ui#ff#do_action('quit')<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-filer = '''
  nnoremap <buffer><expr> <CR> ddu#ui#filer#is_directory()
    \ ? "<Cmd>call ddu#ui#filer#do_action('expandItem', {'mode': 'toggle'})<CR>"
    \ : "<Cmd>call ddu#ui#filer#do_action('itemAction', { 'params': {'command': 'drop'} })<CR>"
  nnoremap <buffer> o <Cmd>call ddu#ui#filer#do_action('itemAction', { 'params': {'command': 'tab drop'} })<CR>
  nnoremap <buffer> n <Cmd>call ddu#ui#filer#do_action('itemAction', { 'name': 'newFile' })<CR>
  nnoremap <buffer> r <Cmd>call ddu#ui#filer#do_action('itemAction', { 'name': 'rename' })<CR>
  nnoremap <buffer> R <Cmd>call ddu#ui#filer#do_action('checkItems')<CR>
  nnoremap <buffer> dd <Cmd>call ddu#ui#filer#do_action('itemAction', { 'name': 'trash' })<CR>
  nnoremap <buffer> q <Cmd>call ddu#ui#filer#do_action('quit')<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
depends = 'ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file'
depends = 'ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
depends = 'ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'ryota2357/cpl'
# repo = '~/CompetitiveProgramming/Library/cpl'
on_source = 'ddu.vim'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
on_source = 'ddu.vim'

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'
# repo = '~/Projects/VimPlugin/ddu-column-icon_filename'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-vim-ui-select'
on_source = 'ddu.vim'
