[[plugins]]
repo = 'Shougo/ddu.vim'
depends = 'denops.vim'
on_event = 'CursorHold'
hook_add = '''
  nnoremap <silent><Leader>f <Cmd>call ddu#start({
    \   'sources': [{'name': 'file_rec'}],
    \   'uiParams': { 'ff': { 'startFilter': v:true } }
    \ })<CR>
  nnoremap <silent><Leader>g <Cmd>call ddu#start({
    \   'sources': [{'name': 'rg'}],
    \   'volatile': v:true,
    \   'uiParams': { 'ff': { 'startFilter': v:true } }
    \ })<CR>

  let g:ddu_ui_params = {}
  let g:ddu_source_options = {
    \   '_': {
    \     'ignoreCase': v:true,
    \     'matchers': ['matcher_fzf']
    \   }
    \ }
  let g:ddu_source_params = {}
  let g:ddu_filter_params = {}
  let g:ddu_kind_options = {}
'''
hook_source = '''
  call ddu#custom#patch_global({
    \   'ui': 'ff',
    \   'uiParams': g:ddu_ui_params,
    \   'sourceOptions': g:ddu_source_options,
    \   'sourceParams': g:ddu_source_params,
    \   'filterParams': g:ddu_filter_params,
    \   'kindOptions': g:ddu_kind_options,
    \ })

  autocmd VimResized * call s:UI_FF_Size()
  function! s:UI_FF_Size() abort
    call ddu#custom#patch_global('uiParams', {
      \   'ff': {
      \     'winRow': round(&lines * 0.2),
      \     'winCol': round(&columns * 0.1),
      \     'winHeight': round(&lines * 0.5),
      \     'winWidth': round(&columns * 0.8),
      \     'previewRow': round(&lines * 0.6),
      \     'previewCol': round(&columns * 0.5),
      \     'previewHeight': round(&lines * 0.4),
      \     'previewWidth': round(&columns * 0.45),
      \   }
      \ })
  endfunction
  call s:UI_FF_Size()
'''

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'
hook_source = '''
  let g:ddu_ui_params['ff'] = {
    \   'split': 'floating',
    \   'floatingBorder': 'rounded',
    \   'previewFloating': v:true,
    \   'previewFloatingBorder': 'double',
    \ }
'''
[plugins.ftplugin]
ddu-ff = '''
  nnoremap <buffer><CR>  <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
  nnoremap <buffer><ESC> <Cmd>call ddu#ui#ff#do_action('quit')<CR>
'''
ddu-ff-filter = '''
  inoremap <buffer><CR>  <Cmd>call ddu#ui#ff#do_action('itemAction', { 'params': {'command': 'drop'} })<CR>
  inoremap <buffer><C-o> <Cmd>call ddu#ui#ff#do_action('itemAction', { 'params': {'command': 'tab drop'} })<CR>
  inoremap <buffer><C-n> <Cmd>call ddu#ui#ff#execute("call cursor(line('.')+1,0)")<CR>
  inoremap <buffer><C-p> <Cmd>call ddu#ui#ff#execute("call cursor(line('.')-1,0)")<CR>
  inoremap <buffer><C-q> <Cmd>call ddu#ui#ff#do_action('preview')<CR>
  inoremap <buffer><ESC> <Cmd>call ddu#ui#ff#do_action('quit')<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
depends = 'ddu-kind-file'
on_source = 'ddu.vim'
hook_source = '''
  let g:ddu_source_params['file_rec'] = {
    \   'ignoredDirectories': ['.git', 'node_modules', '.cache']
    \ }
'''

[[plugins]]
repo = 'shun/ddu-source-rg'
depends = 'ddu-kind-file'
on_source = 'ddu.vim'
hook_source = '''
  let g:ddu_source_options['rg'] = {
    \   'matchers': []
    \ }
'''

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
on_source = 'ddu.vim'
hook_source = '''
  let g:ddu_filter_params['matcher_fzf'] = {
    \   'highlightMatched': 'Search'
    \ }
'''

[[plugins]]
repo = 'matsui54/ddu-vim-ui-select'
on_source = 'ddu.vim'
hook_source = '''
  let g:ddu_kind_options['ui_select'] = {
    \   'defaultAction': 'select'
    \ }
'''

[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'
hook_source = '''
  let g:ddu_kind_options['file'] = {
    \   'defaultAction': 'open'
    \ }
'''
