# defx
[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  nnoremap <silent><Leader>o <Cmd>Defx<CR>
'''
hook_source = '''
  call defx#custom#option('_', {
    \ 'winwidth': 30,
    \ 'split': 'vertical',
    \ 'direction': 'topleft',
    \ 'show_ignored_files': 1,
    \ 'buffer_name': 'exproler',
    \ 'toggle': 1,
    \ 'resume': 1,
    \ 'columns': 'indent:git:space:icons:space:filename:mark',
    \ })
  call defx#custom#column('filename', {
    \ 'min_width': 10,
    \ 'max_width': 30,
    \ })
'''
[plugins.ftplugin]
defx = '''
  nnoremap <silent><buffer><expr> <CR>
    \ defx#is_directory() ?
    \ defx#do_action('open_or_close_tree') :
    \ defx#do_action('multi', ['quit', 'drop'])
  nnoremap <silent><buffer><expr> n defx#do_action('new_file')
  nnoremap <silent><buffer><expr> r defx#do_action('rename', 'append')
  nnoremap <silent><buffer><expr> R defx#do_action('redraw')
  nnoremap <silent><buffer><expr> o
    \ defx#is_directory() ?
    \ defx#do_action('open_or_close_tree') :
    \ defx#do_action('multi', ['quit', ['open', 'tab drop']])
  nnoremap <silent><buffer><expr> p defx#do_action('preview')
  nnoremap <silent><buffer><expr> dd defx#do_action('remove_trash')
  nnoremap <silent><buffer><expr> q defx#do_action('quit')
'''

[[plugins]]
repo = 'kristijanhusak/defx-icons'
on_source = 'defx.nvim'

[[plugins]]
repo = 'kristijanhusak/defx-git'
on_source = 'defx.nvim'

[[plugins]]
repo = 'rcarriga/nvim-notify'
on_lua = 'notify'
on_source = '''
  lua vim.notify = require('notify')
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
hook_post_update = 'TSUpdate'
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
    ensure_installed = 'all',
    additional_vim_regex_highlighting = false,

    -- m1でエラー出るから
    ignore_install = { 'phpdoc' },

    -- helpはハイライト変になる
    -- latexはなんかsnipet挿入後とかでエラーが出る
    highlight = {
        enable = true,
        disable = { 'help', 'latex', 'tex' },
    },
}
EOF
'''

[[plugins]]
repo = 'nvim-treesitter/playground'
on_cmd = 'TSHighlightCapturesUnderCursor'

[[plugins]]
repo = 'cocopon/inspecthi.vim'
on_cmd = 'Inspecthi'

# markdown preview
# コマンド :PreviewMarkdown       # Start the preview
#          :PreviewMarkdownStop   # Stop the preview
#          :PreviewMarkdownToggle # Toggle the window
[[plugins]]
repo = 'kat0h/bufpreview.vim'
on_ft = 'markdown'

[[plugins]]
repo = 'tomtom/tcomment_vim'
on_cmd = 'TComment'
hook_add = '''
  let g:tcomment_maps = 0
  vnoremap ? :TComment<CR>
  nnoremap ? <Cmd>TComment<CR>
'''

# formatter
[[plugins]]
repo = 'prettier/vim-prettier'
build = 'npm install'
on_ft = ['markdown']
hook_source = '''
  autocmd BufWritePre *.md PrettierAsync
'''
hook_add = '''
  let g:prettier#config#tab_width = 2
'''

[[plugins]]
repo = 'ryota2357/vim-skim-synctex'
# repo = '~/Projects/VimPlugin/vim-skim-synctex'
depends = 'denops.vim'
on_ft = 'tex'
hook_source = '''
  call synctex#option('readingBar', v:true)
  call synctex#option('autoQuit', v:true)
'''
[plugins.ftplugin]
tex = '''
  nnoremap <buffer> <Leader>s <Cmd>call synctex#forwardSerch()<CR>
'''
