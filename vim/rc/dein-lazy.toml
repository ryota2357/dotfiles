# defx
[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  nnoremap <silent> <Leader>o :<C-u>Defx<CR>
'''
hook_source = '''
  call defx#custom#option('_', {
    \ 'winwidth': 30,
    \ 'split': 'vertical',
    \ 'direction': 'topleft',
    \ 'show_ignored_files': 1,
    \ 'buffer_name': 'exproler',
    \ 'toggle': 1,
    \ 'resume': 1,
    \ 'columns': 'indent:git:space:icons:space:filename:mark',
    \ })
  call defx#custom#column('filename', {
    \ 'min_width': 10,
    \ 'max_width': 30,
    \ })
'''
[plugins.ftplugin]
defx = '''
  nnoremap <silent><buffer><expr> <Enter>
    \ defx#is_directory() ?
    \ defx#do_action('open_or_close_tree') :
    \ defx#do_action('multi', ['drop', 'quit'])
  nnoremap <silent><buffer><expr> n defx#do_action('new_file')
  nnoremap <silent><buffer><expr> r defx#do_action('rename', 'append')
  nnoremap <silent><buffer><expr> R defx#do_action('redraw')
  nnoremap <silent><buffer><expr> t
    \ defx#is_directory() ?
    \ defx#do_action('open_or_close_tree') :
    \ defx#do_action('multi', ['quit', ['open', 'tab drop']])
  nnoremap <silent><buffer><expr> p defx#do_action('preview')
  nnoremap <silent><buffer><expr> dd defx#do_action('remove_trash')
  nnoremap <silent><buffer><expr> q defx#do_action('quit')
'''

[[plugins]]
repo = 'kristijanhusak/defx-icons'
on_source = 'defx.nvim'

[[plugins]]
repo = 'kristijanhusak/defx-git'
on_source = 'defx.nvim'


# formatter
[[plugins]]
repo = 'prettier/vim-prettier'
build = 'npm install'
on_ft = ['markdown']
hook_source = '''
  autocmd BufWritePre *.md PrettierAsync
'''

