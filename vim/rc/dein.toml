[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
  let s:github_pat = expand('~/dotfiles/vim/github_parsonal_access_token.txt')
  if filereadable(s:github_pat)
    let g:dein#install_github_api_token = readfile(s:github_pat)[0]
    command! UpdatePlugin call dein#check_update(v:true)
  endif
'''

[[plugins]]
repo = 'ryota2357/dein-snip.lua'

[[plugins]]
repo = 'vim-denops/denops.vim'
hook_add = '''
  let g:denops_server_addr = '127.0.0.1:32123'
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'

[[plugins]]
repo = 'lambdalisue/kensaku.vim'
depends = 'denops.vim'

[[plugins]]
repo = 'ryota2357/necodark'
rev = 'build/nvim'
hook_add = 'colorscheme necodark'

[[plugins]]
repo = 'joshdick/onedark.vim'

[[plugins]]
repo = 'EdenEast/nightfox.nvim'

[[plugins]]
repo = 'folke/tokyonight.nvim'

[[plugins]]
repo = 'tomasiser/vim-code-dark'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
  let g:context_filetype#ignore_patterns = #{
    \ toml: ['^\s*#\s*'],
    \ }
'''

[[plugins]]
repo = 'harenome/vim-mipssyntax'

[[plugins]]
repo = 'RRethy/vim-illuminate'

[[plugins]]
repo = 'rcarriga/nvim-notify'
lua_add = '''
    local ignore_msgs = { "rust_analyzer: -32802: server cancelled the request" }
    vim.notify = function(msg, ...)
        for _, ignore in ipairs(ignore_msgs) do
            if msg == ignore then
              return
            end
        end
        require("notify")(msg, ...)
    end
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_post_update = 'TSUpdate'
lua_source = '''
    require('nvim-treesitter.configs').setup {
        ensure_installed = 'all',
        additional_vim_regex_highlighting = false,

        -- tex  : snipet挿入後とかでエラーが出る
        highlight = {
            enable = true,
            disable = { 'latex', 'tex' },
        },
    }
'''

[[plugins]]
repo = '~/Projects/VimPlugin/qfind'

[[plugins]]
repo = '~/Projects/VimPlugin/ffiler'
